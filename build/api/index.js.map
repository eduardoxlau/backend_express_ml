{"version":3,"sources":["../../src/api/index.js"],"names":["Api","name","lastname","query","axios","get","url","data","results","filters","items","orderItems","categories","getCategory","author","id","plain_text","item","title","price","currency","currency_id","amount","decimals","picture","pictures","length","thumbnail","condition","sold_quantity","free_shipping","shipping","description","elements","map","categoriesMap","categoryMostCommon","count","forEach","category_id","category","filter","el","find","path_from_root","values"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nclass Api {\n  url = \"http://api.mercadolibre.com\";\n  categories = [];\n  author = {\n    name: \"Rafael\",\n    lastname: \"sanchez\",\n  };\n  constructor() {}\n\n  async items(query) {\n    const {\n      data: { results, filters },\n    } = await axios.get(`${this.url}/sites/MLA/search?q=${query}`);\n    let items = this.orderItems(results);\n    this.categories = this.getCategory(results, filters);\n\n    return { author: this.author, categories: this.categories, items };\n  }\n\n  async item(id) {\n    const { data } = await axios.get(`${this.url}/items/${id}`);\n    const {\n      data: { plain_text },\n    } = await axios.get(`${this.url}/items/${id}/description`);\n\n    let item = {\n      id: data.id,\n      title: data.title,\n      price: {\n        currency: data.currency_id,\n        amount: data.price,\n        decimals: 0,\n      },\n      picture: !data.pictures.length ? data.thumbnail : data.pictures[0].url,\n      condition: data.condition,\n      sold_quantity: data.sold_quantity,\n      free_shipping: data.shipping.free_shipping,\n      description: plain_text,\n    };\n\n    return { author: this.author, categories: this.categories, item };\n  }\n\n  orderItems(elements) {\n    let items = elements.map((item) => {\n      return {\n        id: item.id,\n        title: item.title,\n        price: {\n          currency: item.currency_id,\n          amount: item.price,\n          decimals: 0,\n        },\n        picture: item.thumbnail,\n        condition: item.condition,\n        free_shipping: item.shipping.free_shipping,\n      };\n    });\n\n    return items;\n  }\n\n  getCategory(elements, filters = []) {\n    let categoriesMap = {};\n    let categoryMostCommon = { count: 0, id: null };\n\n    if (!filters.length) return [];\n\n    elements.forEach((item) => {\n      categoriesMap[item.category_id] =\n        (categoriesMap[item.category_id] || 0) + 1;\n\n      if (categoriesMap[item.category_id] > categoryMostCommon.count) {\n        categoryMostCommon = {\n          count: categoriesMap[item.category_id],\n          id: item.category_id,\n        };\n      }\n    });\n\n    let category = filters.filter((el) => el.id == \"category\");\n\n    let { values: path_from_root } = category.find(\n      (el) => (el.id = categoryMostCommon.id)\n    );\n\n    return path_from_root;\n  }\n}\n\nexport default Api;\n"],"file":"index.js"}